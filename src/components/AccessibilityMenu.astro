---
import {
  Palette,
  Moon,
  Link,
  Type,
  Pause,
  FileText,
  Mouse,
  RotateCcw,
  Accessibility,
} from "lucide-astro";

const accessibilityOptions = [
  // {
  //   id: "invert-colors",
  //   name: "Balik Warna",
  //   icon: Palette,
  //   description: "Balik semua warna pada halaman",
  // },
  {
    id: "dark-contrast",
    name: "Kontras Gelap",
    icon: Moon,
    description: "Tingkatkan kontras untuk visibilitas yang lebih baik",
  },
  {
    id: "highlight-links",
    name: "Sorot Tautan",
    icon: Link,
    description: "Tambahkan sorotan pada semua tautan",
  },
  {
    id: "bigger-text",
    name: "Teks Besar",
    icon: Type,
    description: "Perbesar ukuran teks",
  },
  {
    id: "pause-animations",
    name: "Jeda Animasi",
    icon: Pause,
    description: "Hentikan semua animasi dan transisi",
  },
  {
    id: "legible-fonts",
    name: "Font Terbaca",
    icon: FileText,
    description: "Gunakan font yang lebih mudah dibaca",
  },
  {
    id: "big-cursor",
    name: "Kursor Besar",
    icon: Mouse,
    description: "Perbesar ukuran kursor",
  },
];
---

<!-- Accessibility Menu Button -->
<button
  id="accessibility-toggle"
  class="fixed top-4 right-4 z-50 bg-yellow-500 hover:bg-yellow-600 text-black font-bold p-3 rounded-full shadow-lg border-2 border-black transition-all duration-300 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-black"
  aria-label="Alih Menu Aksesibilitas"
  title="Opsi Aksesibilitas"
>
  <Accessibility class="w-6 h-6" />
</button>

<!-- Accessibility Menu Panel -->
<div
  id="accessibility-menu"
  class="fixed top-16 right-4 z-[9999] w-80 bg-gray-900 text-white rounded-xl shadow-2xl border-2 border-yellow-500 transform translate-x-full opacity-0 pointer-events-none transition-all duration-300"
>
  <div class="p-4">
    <!-- Header -->
    <div class="flex items-center justify-between mb-4">
      <h3 class="text-lg font-bold text-yellow-400 flex items-center invert-colors">
        <Accessibility class="w-5 h-5 mr-2" />
        Menu Aksesibilitas
      </h3>
      <button
        id="accessibility-close"
        class="text-gray-300 hover:text-white transition-colors duration-200 invert-colors"
        aria-label="Tutup Menu Aksesibilitas"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Accessibility Options -->
    <div class="space-y-3">
      {
        accessibilityOptions.map((option) => (
          <div class="flex items-center justify-between p-3 bg-gray-800 rounded-lg hover:bg-gray-700 border border-gray-600 transition-colors duration-200 invert-colors">
            <div class="flex items-center space-x-3">
              <div class="flex-shrink-0">
                <option.icon class="w-5 h-5 text-yellow-400 invert-colors" />
              </div>
              <div>
                <div class="text-sm font-semibold text-white invert-colors">
                  {option.name}
                </div>
                <div class="text-xs text-gray-300 invert-colors">{option.description}</div>
              </div>
            </div>
            <label class="relative inline-flex items-center cursor-pointer">
              <input
                type="checkbox"
                class={`accessibility-toggle sr-only peer`}
                data-feature={option.id}
              />
              <div class="w-11 h-6 bg-gray-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-yellow-400/25 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-yellow-500 invert-colors" />
            </label>
          </div>
        ))
      }
    </div>

    <!-- Reset All Button -->
    <div class="mt-4 pt-4 border-t border-gray-600">
      <button
        id="reset-accessibility"
        class="w-full flex items-center justify-center px-4 py-2 bg-gray-800 hover:bg-gray-700 text-yellow-400 font-semibold border border-yellow-500 rounded-lg transition-colors duration-200 invert-colors"
      >
        <RotateCcw class="w-4 h-4 mr-2" />
        Atur Ulang Semua
      </button>
    </div>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("accessibility-toggle");
    const menu = document.getElementById("accessibility-menu");
    const closeBtn = document.getElementById("accessibility-close");
    const resetBtn = document.getElementById("reset-accessibility");
    const toggles = document.querySelectorAll(".accessibility-toggle");

    // Toggle menu visibility
    function toggleMenu() {
      if (!menu) return;

      const isOpen = menu.classList.contains("translate-x-0");

      if (isOpen) {
        menu.classList.remove(
          "translate-x-0",
          "opacity-100",
          "pointer-events-auto",
        );
        menu.classList.add(
          "translate-x-full",
          "opacity-0",
          "pointer-events-none",
        );
      } else {
        menu.classList.remove(
          "translate-x-full",
          "opacity-0",
          "pointer-events-none",
        );
        menu.classList.add(
          "translate-x-0",
          "opacity-100",
          "pointer-events-auto",
        );
      }
    }

    // Event listeners
    toggleBtn?.addEventListener("click", toggleMenu);
    closeBtn?.addEventListener("click", toggleMenu);

    // Close menu when clicking outside
    document.addEventListener("click", (e) => {
      const target = e.target as Node;
      if (!menu?.contains(target) && !toggleBtn?.contains(target)) {
        menu?.classList.remove(
          "translate-x-0",
          "opacity-100",
          "pointer-events-auto",
        );
        menu?.classList.add(
          "translate-x-full",
          "opacity-0",
          "pointer-events-none",
        );
      }
    });

    // Handle accessibility toggles
    toggles.forEach((toggle) => {
      const htmlToggle = toggle as HTMLInputElement;

      htmlToggle.addEventListener("change", (e) => {
        const target = e.target as HTMLInputElement;
        const feature = target.dataset.feature;
        const body = document.body;

        if (target.checked) {
          body.classList.add(feature || "", "accessibility-enabled");
        } else {
          body.classList.remove(feature || "", "accessibility-enabled");
        }

        // Save preferences to localStorage
        const preferences = JSON.parse(
          localStorage.getItem("accessibility-preferences") || "{}",
        );
        preferences[feature || ""] = target.checked;
        localStorage.setItem(
          "accessibility-preferences",
          JSON.stringify(preferences),
        );
      });

      // Load saved preferences
      const feature = htmlToggle.dataset.feature;
      const preferences = JSON.parse(
        localStorage.getItem("accessibility-preferences") || "{}",
      );

      if (preferences[feature || ""]) {
        htmlToggle.checked = true;
        document.body.classList.add(feature || "", "accessibility-enabled");
      }
    });

    // Reset all accessibility features
    resetBtn?.addEventListener("click", () => {
      toggles.forEach((toggle) => {
        const htmlToggle = toggle as HTMLInputElement;
        htmlToggle.checked = false;
        const feature = htmlToggle.dataset.feature;
        document.body.classList.remove(feature || "", "accessibility-enabled");
      });

      localStorage.removeItem("accessibility-preferences");
    });

    // Keyboard navigation
    document.addEventListener("keydown", (e) => {
      // ESC key closes menu
      if (e.key === "Escape") {
        menu?.classList.remove(
          "translate-x-0",
          "opacity-100",
          "pointer-events-auto",
        );
        menu?.classList.add(
          "translate-x-full",
          "opacity-0",
          "pointer-events-none",
        );
      }
    });
  });
</script>

