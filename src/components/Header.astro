---
const links = [
  { name: 'Beranda', href: '/' },
  { name: 'Tentang Kami', href: '/tentang' },
  { name: 'Penerimaan', href: '/penerimaan' },
  { name: 'Akademik', href: '/akademik' },
  { name: 'Berita & Acara', href: '/berita' },
  { name: 'Staf & Guru', href: '/staf' },
  { name: 'Kehidupan Siswa', href: '/kegiatan-siswa' },
  { name: 'Galeri', href: '/galeri' },
  { name: 'Kontak', href: '/kontak' },
];
---

<header class="bg-background dark:bg-dark-bg shadow-md sticky top-0 z-50 transition-colors duration-300">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between py-4">
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img
            src="/src/assets/logo/LogoSMKN14.png"
            alt="Logo SMKN 14 Jakarta"
            class="h-12 w-auto mr-3"
          />
          <span class="text-2xl font-bold text-gray-800 dark:text-dark-text">
            SMKN 14 Jakarta
          </span>
        </a>
      </div>
      <nav class="hidden md:flex items-center space-x-6">
        {links.map(link => (
          <a
            href={link.href}
            class:list={[
              "text-gray-700 dark:text-dark-text hover:text-primary-hover dark:hover:text-primary-hover transition-all duration-300 font-medium hover:scale-105",
              { "font-bold text-primary dark:text-primary": Astro.url.pathname === link.href }
            ]}
          >
            {link.name}
          </a>
        ))}
      </nav>
      <div class="flex items-center space-x-4">
        <!-- Dark Mode Toggle -->
        <button id="theme-toggle" class="text-gray-600 dark:text-dark-text hover:text-gray-800 dark:hover:text-white focus:outline-none">
          <svg id="theme-icon-light" class="h-6 w-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
          </svg>
          <svg id="theme-icon-dark" class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
          </svg>
        </button>
        <div class="md:hidden">
          <button id="menu-btn" class="text-gray-600 dark:text-dark-text hover:text-gray-800 dark:hover:text-white focus:outline-none">
            <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-background dark:bg-dark-bg border-t border-gray-200 dark:border-gray-700">
    <nav class="px-2 pt-2 pb-4 space-y-1 sm:px-3">
      {links.map(link => (
        <a
          href={link.href}
          class:list={[
            "block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-dark-text hover:text-white hover:bg-primary-hover dark:hover:bg-primary-hover transition-all duration-300 hover:scale-105",
            { "bg-primary/10 dark:bg-primary/20 text-primary dark:text-primary": Astro.url.pathname === link.href }
          ]}
        >
          {link.name}
        </a>
      ))}
    </nav>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Mobile menu toggle
    const menuBtn = document.getElementById('menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');

    if (menuBtn && mobileMenu) {
      menuBtn.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    // Dark mode toggle
    const themeToggle = document.getElementById('theme-toggle');
    const themeIconLight = document.getElementById('theme-icon-light');
    const themeIconDark = document.getElementById('theme-icon-dark');
    const html = document.documentElement;

    // Check for saved theme preference or default to light mode
    const currentTheme = localStorage.getItem('theme') || 'light';

    if (currentTheme === 'dark') {
      html.classList.add('dark');
      if (themeIconLight) themeIconLight.classList.remove('hidden');
      if (themeIconDark) themeIconDark.classList.add('hidden');
    } else {
      html.classList.remove('dark');
      if (themeIconLight) themeIconLight.classList.add('hidden');
      if (themeIconDark) themeIconDark.classList.remove('hidden');
    }

    if (themeToggle) {
      themeToggle.addEventListener('click', () => {
        if (html.classList.contains('dark')) {
          html.classList.remove('dark');
          localStorage.setItem('theme', 'light');
          if (themeIconLight) themeIconLight.classList.add('hidden');
          if (themeIconDark) themeIconDark.classList.remove('hidden');
        } else {
          html.classList.add('dark');
          localStorage.setItem('theme', 'dark');
          if (themeIconLight) themeIconLight.classList.remove('hidden');
          if (themeIconDark) themeIconDark.classList.add('hidden');
        }
      });
    }
  });
</script>